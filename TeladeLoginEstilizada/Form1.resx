<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAGmCAYAAAAK1TyUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAABoJJREFUeF7tyDEBgDAABLHKxilyioFT8GTIknOe9wIAP5MJAGzLBAC2ZQIA2zIB
        gG2ZAMC2TABgWyYAsC0TANiWCQBsywQAtmUCANsyAYBtmQDAtkwAYFsmALAtEwDYlgkAbMsEALZlAgDb
        MgGAbZkAwLZMAGBbJgCwLRMA2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBsywQAtmUC
        ANsyAYBtmQDAtkwAYFsmALAtEwDYlgkAbMsEALZlAgDbMgGAbZkAwLZMAGBbJgCwLRMA2JYJAGzLBAC2
        ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBsywQAtmUCANsyAYBtmQDAtkwAYFsmALAtEwDYlgkAbMsE
        ALZlAgDbMgGAbZkAwLZMAGBbJgCwLRMA2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBs
        ywQAtmUCANsyAYBtmQDAtkwAYFsmALAtEwDYlgkAbMsEALZlAgDbMgGAbZkAwLZMAGBbJgCwLRMA2JYJ
        AGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBsywQAtmUCANsyAYBtmQDAtkwAYFsmALAtEwDY
        lgkAbMsEALZlAgDbMgGAbZkAwLZMAGBbJgCwLRMA2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0T
        ANiWCQBsywQAtmUCANsyAYBtmQDAtkwAYFsmALAtEwDYlgkAbMsEALZlAgDbMgGAbZkAwLZMAGBbJgCw
        LRMA2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBsywQAtmUCANsyAYBtmQDAtkwAYFsm
        ALAtEwDYlgkAbMsEALZlAgDbMgGAbZkAwLZMAGBbJgCwLRMA2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABg
        WyYAsC0TANiWCQBsywQAtmUCANsyAYBtmQDAtkwAYFsmALAtEwDYlgkAbMsEALZlAgDbMgGAbZkAwLZM
        AGBbJgCwLRMA2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBsywQAtmUCANsyAYBtmQDA
        tkwAYFsmALAtEwDYlgkAbMsEALZlAgDbMgGAbZkAwLZMAGBbJgCwLRMA2JYJAGzLBAC2ZQIA2zIBgG2Z
        AMC2TABgWyYAsC0TANiWCQBsywQAtmUCANsyAYBtmQDAtkwAYFsmALAtEwDYlgkAbMsEALZlAgDbMgGA
        bZkAwLZMAGBbJgCwLRMA2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBsywQAtmUCANsy
        AYBtmQDAtkwAYFsmALAtEwDYlgkAbMsEALZlAgDbMgGAbZkAwLZMAGBbJgCwLRMA2JYJAGzLBAC2ZQIA
        2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBsywQAtmUCANsyAYBtmQDAtkwAYFsmALAtEwDYlgkAbMsEALZl
        AgDbMgGAbZkAwLZMAGBbJgCwLRMA2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBsywQA
        tmUCANsyAYBtmQDAtkwAYFsmALAtEwDYlgkAbMsEALZlAgDbMgGAbZkAwLZMAGBbJgCwLRMA2JYJAGzL
        BAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBsywQAtmUCANsyAYBtmQDAtkwAYFsmALAtEwDYlgkA
        bMsEALZlAgDbMgGAbZkAwLZMAGBbJgCwLRMA2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiW
        CQBsywQAtmUCANsyAYBtmQDAtkwAYFsmALAtEwDYlgkAbMsEALZlAgDbMgGAbZkAwLZMAGBbJgCwLRMA
        2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBsywQAtmUCANsyAYBtmQDAtkwAYFsmALAt
        EwDYlgkAbMsEALZlAgDbMgGAbZkAwLZMAGBbJgCwLRMA2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYA
        sC0TANiWCQBsywQAtmUCANsyAYBtmQDAtkwAYFsmALAtEwDYlgkAbMsEALZlAgDbMgGAbZkAwLZMAGBb
        JgCwLRMA2JYJAGzLBAC2ZQIA2zIBgG2ZAMC2TABgWyYAsC0TANiWCQBsywQAtmUCANsyAYBtmQDAsPd+
        TOmZ+CkvfPoAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>